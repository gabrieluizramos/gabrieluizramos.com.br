{"componentChunkName":"component---src-templates-post-article-index-js","path":"/anatomia-de-um-teste-em-javascript","result":{"data":{"markdownRemark":{"id":"f698b1fe-b84d-545d-8868-52690fa2c6a3","html":"<p>Se você trabalha utilizando ou já leu algo sobre testes, talvez já tenha se deparado com algumas estruturas, termos e nomenclaturas que podem causar algumas confusões.</p>\n<p>É comum tentar assemelhar seus testes à maneira que seu software é utilizado pelos seus usuários. Isso é uma parte muito importante do <a href=\"/voce-confia-em-si/\">processo de confiança</a> que você cria com o código que você desenvolve. Um pouco na linha de pensamento utilizada no <code class=\"language-text\">BDD</code> (<em>Behavior Driven Development</em> ou Desenvolvimento Guiado a Comportamento), embora seja um tópico um pouco mais abrangente.</p>\n<p>Entender como funciona a anatomia de um teste, sabendo os pedaços envolvidos no processo e como seu teste é avaliado é parte importante nesse processo todo.</p>\n<p>Para prosseguirmos com alguns exemplos de código, seguirei algumas estruturas propostas por frameworks pelo <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest</a>, acredito que é uma das ferramentas que tem mais visibilidade hoje em dia. Mas existem outras no mercado que possuem estruturas semelhantes e, os fundamentos, podem ser aproveitados da mesma maneira.</p>\n<h3 id=\"cobertura-ou-coverage\" style=\"position:relative;\"><a href=\"#cobertura-ou-coverage\" aria-label=\"cobertura ou coverage permalink\" class=\"anchor before\">#</a>Cobertura (ou <em>coverage</em>)</h3>\n<p>É um dos termos mais comuns e acho que é o que mais utilizamos como parâmetro para algumas decisões e resultados quando estamos escrevendo testes.</p>\n<p>A <strong>cobertura</strong> de testes indica quais partes de seu código estão sendo <strong>executadas</strong>. Por exemplo: se temos um código de <code class=\"language-text\">10 linhas</code> e uma <strong>cobertura</strong> de <code class=\"language-text\">50%</code>, isso quer dizer que apenas metade das linhas desse código (ou seja, <code class=\"language-text\">5 linhas</code>) estão sendo executadas ao longo dos testes.</p>\n<p>Algumas ferramentas geram alguns relatórios visuais em HTML ou até mesmo diretamente no seu terminal, como é o caso do <code class=\"language-text\">Jest</code>, que oferece um report com uma tabela parecida com essa:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">----------|----------|----------|----------|----------|-------------------|\nFile      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |\n----------|----------|----------|----------|----------|-------------------|\nAll files |      100 |      100 |      100 |      100 |                   |\n data.js  |      100 |      100 |      100 |      100 |                   |\n----------|----------|----------|----------|----------|-------------------|</code></pre></div>\n<p>Vale a pena darmos uma passada sobre cada uma das categorias desse relatório de cobertura.</p>\n<ul>\n<li>Arquivo (ou <em><code class=\"language-text\">file</code></em>): nessa coluna podemos ver todos os arquivos que foram executados ao longo dos testes escritos;</li>\n<li>Declarações (ou <em>statements/stmts</em>): indica quais os termos de declaração (como variáveis e <em><code class=\"language-text\">imports</code></em>) foram ou não cobertos ao executar os testes;</li>\n<li>Ramificações (ou <em><code class=\"language-text\">branch</code></em>): analisando a palavra <em><code class=\"language-text\">branch</code></em> temos <code class=\"language-text\">ramo</code> (ou \"galho\") como tradução em português o que faz com que essa coluna possa ser confundida com as <em><code class=\"language-text\">branches</code></em> do git, então vale ressaltar que são coisas diferentes. Os valores que aparecem nessa coluna não condizem com a cobertura de sua <em><code class=\"language-text\">branch</code></em> do git, mas sim com as ramificações de seu código. Podemos entender como ramificação qualquer trecho de código que divide a execução de nosso programas em duas ou mais partes, ou seja: trechos com blocos <em><code class=\"language-text\">if/else</code></em>, <em><code class=\"language-text\">switch/case</code></em> ou <code class=\"language-text\">ternários</code>; O que essa coluna relata é justamente essa questão: quantas ramificações (trechos de execuções distintas) do código escrito nos arquivos foram executadas.</li>\n<li>Funções (ou <em><code class=\"language-text\">functions/funcs</code></em>): indica se as funções (rotinas e sub-rotinas) do seu código foram executadas ao longo dos seus testes;</li>\n<li>Linhas (ou <em><code class=\"language-text\">lines</code></em>): indica quantas linhas do código estão cobertas;</li>\n<li>Linhas não cobertas (ou <code class=\"language-text\">uncovered lines</code>): ao contrário do item anterior, indica quais linhas <code class=\"language-text\">não</code> foram cobertas nos testes.</li>\n</ul>\n<p>Agora vamos ver alguns trechos e exemplos mais práticos e entender como eles funcionam.</p>\n<h3 id=\"suites-de-teste-ou-test-suites\" style=\"position:relative;\"><a href=\"#suites-de-teste-ou-test-suites\" aria-label=\"suites de teste ou test suites permalink\" class=\"anchor before\">#</a>Suítes de teste (ou test suites)</h3>\n<p>Suítes de teste é um termo utilizado pra exemplificar um agrupamento de testes. Basicamente! :)</p>\n<p>É comum que, no caso do <code class=\"language-text\">Jest</code>, isso seja confundido com os blocos de <code class=\"language-text\">describe</code>, que são usados para agrupar alguns testes dentro de um mesmo arquivo, mas <a href=\"https://jestjs.io/docs/en/api.html#describename-fn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>não é o caso</strong></a>. Pode parecer confuso, mas o <code class=\"language-text\">Jest</code> considera que cada arquivo é uma suite de teste diferente.</p>\n<p>Nesse caso, a utilização do <code class=\"language-text\">describe</code> é exclusivamente para realizar um agrupamento mais específico de testes relacionados, por exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Calculadora'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// testes relacionados aos cálculos</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Essa estrutura é totalmente opcional, já que é possível criar testes utilizando outras funções que veremos a seguir. Entretanto, é uma boa ferramenta para aprimorar a semântica (ou seja, o significado) de seus testes já que agrupa testes (ou outros <code class=\"language-text\">describe</code>) com uma <code class=\"language-text\">descrição</code>.</p>\n<h3 id=\"o-teste-em-si\" style=\"position:relative;\"><a href=\"#o-teste-em-si\" aria-label=\"o teste em si permalink\" class=\"anchor before\">#</a>O teste em si</h3>\n<p>É o bloco onde devem ser declarados os testes que realmente serão executados e onde as asserções (que veremos a seguir) serão inseridas.</p>\n<p>Através do <code class=\"language-text\">Jest</code> podem ser acessados através das funções <code class=\"language-text\">it</code> (que nada mais é que um apelido, ou <code class=\"language-text\">alias</code> para as funções <code class=\"language-text\">test</code>).</p>\n<p>Dessa forma, podemos criar alguns testes como:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Calculadora'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Soma'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ou com test</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Soma'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Como <code class=\"language-text\">it</code> e <code class=\"language-text\">test</code> são iguais, você pode optar pelo que achar melhor.</p>\n<p>O que vale a pena ter em mente é que, assim como o <code class=\"language-text\">describe</code>, utilizar um ou outro pode trazer alguns detalhes mais semânticos pro seu código, já que as funções tem nomenclaturas diferentes.</p>\n<h3 id=\"assercoes-ou-assertions\" style=\"position:relative;\"><a href=\"#assercoes-ou-assertions\" aria-label=\"assercoes ou assertions permalink\" class=\"anchor before\">#</a>Asserções (ou assertions)</h3>\n<p>Asserção significa afirmação. É com as asserções que iremos afirmar o comportamento esperado do nosso código. Assim como os blocos de <code class=\"language-text\">describe</code> e <code class=\"language-text\">it</code>, são funções que possuem uma nomenclatura semântica. Podemos pensar na utilização das asserções em duas partes:</p>\n<ul>\n<li>valor atual (ou de entrada/esperado);</li>\n<li>valor a ser comparado (ou de saída/resultado).</li>\n</ul>\n<p>Com base nesses dois valores, conseguimos sempre organizar nossos testes. Vamos voltar ao exemplo da calculadora e vamos tentar implementar o teste da função de soma (não vamos realizar a função em si).</p>\n<p>Podemos criar nosso bloco de descrição (<code class=\"language-text\">describe</code>) com um teste (<code class=\"language-text\">it</code>) para iniciar:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> calculadora <span class=\"token keyword\">from</span> <span class=\"token string\">'./calculadora'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Calculadora'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Soma'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// faremos o teste aqui</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vamos imaginar que teremos um objeto <code class=\"language-text\">calculadora</code> que possui o método <code class=\"language-text\">soma</code>, que recebe como parâmetro dois valores que serão somados. Dessa forma, acessamos a função utilizando <code class=\"language-text\">calculadora.soma</code>.</p>\n<p>Com isso, podemos já criar algumas variáveis que serão responsáveis por conter nosso valor <code class=\"language-text\">esperado</code> e nosso <code class=\"language-text\">resultado</code>.</p>\n<p>Continuando o teste:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> calculadora <span class=\"token keyword\">from</span> <span class=\"token string\">'./calculadora'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Calculadora'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Soma'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// atual (a ser testado)</span>\n    <span class=\"token keyword\">const</span> atual <span class=\"token operator\">=</span> calculadora<span class=\"token punctuation\">.</span><span class=\"token function\">soma</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// resultado esperado</span>\n    <span class=\"token keyword\">const</span> resultado <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// asserção será feita a seguir</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Já temos as variáveis com o retorno função (<code class=\"language-text\">atual</code>) e o resultado esperado (<code class=\"language-text\">resultado</code>).</p>\n<p>Com isso podemos escrever nossa asserção. A função é iniciada com <code class=\"language-text\">expect</code> (pois iremos consultar e <code class=\"language-text\">esperar</code> que algum valor seja igual a algo que determinamos) e essa função retorna um objeto com outras funções (chamadas <code class=\"language-text\">matchers</code> onde verificamos valores correspondentes), como: <code class=\"language-text\">toEqual</code> (verifica se um valor é igual a outro), <code class=\"language-text\">toThrow</code> (verifica se um erro foi disparado), <code class=\"language-text\">toBeGreaterThan</code> (verifica se o valor é maior que outro).</p>\n<p>Caso tenha precise, você também pode criar seus <a href=\"https://jestjs.io/docs/pt-BR/expect#expectextendmatchers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">matchers</code></a> customizados.</p>\n<p>Nesse exemplo, podemos utilizar o <code class=\"language-text\">toEqual</code> já que vamos comparar se o valor retornado por nossa função é igual a <code class=\"language-text\">2</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> calculadora <span class=\"token keyword\">from</span> <span class=\"token string\">'./calculadora'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Calculadora'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Soma'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// atual (a ser testado)</span>\n    <span class=\"token keyword\">const</span> atual <span class=\"token operator\">=</span> calculadora<span class=\"token punctuation\">.</span><span class=\"token function\">soma</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// resultado esperado</span>\n    <span class=\"token keyword\">const</span> resultado <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// asserção feita</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>atual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>esperado<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Poderíamos ter moldado o teste de qualquer forma, inclusive removendo as variáveis e passando os valores diretamente. Mas acho que dividindo os testes nessas etapas (entrada, saída e execução da função) é uma forma prática de entender como tudo funciona.</p>\n<p>Sobre a semântica e a leitura dos testes que comentamos, podemos parar para fazer uma leitura sobre o teste que criamos. Ao ler o código desenvolvido, podemos ler algo como:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Descrição: calculadora\nEla: soma\nEspero: que o valor atual (2) seja igual ao esperado (resultado da calculadora.soma(1, 1));</code></pre></div>\n<p>Com isso, conseguimos ver que além de nos trazer mais confiança, escrever testes que se assemelham à forma como seu software é utilizado é uma forma também de documentar seu sistema. Se seus testes estão organizados, você consegue executá-los, ler suas descrições e entender como seu sistema funciona.</p>\n<h3 id=\"hooks\" style=\"position:relative;\"><a href=\"#hooks\" aria-label=\"hooks permalink\" class=\"anchor before\">#</a>Hooks</h3>\n<p>Outra estrutura que as ferramentas (como o <code class=\"language-text\">Jest</code>) costumam disponibilizar, são funções executadas em determinada \"parte\" dos seus testes. São bem úteis caso você precise ajustar/resetar alguma configuração antes, depois ou a cada teste, você consegue utilizá-las para realizar esse trabalho.</p>\n<p>Podemos utilizar as funções:</p>\n<ul>\n<li><code class=\"language-text\">beforeAll</code>: para executar algo antes de todos os testes;</li>\n<li><code class=\"language-text\">afterAll</code>: para executar algo após todos os testes finalizarem;</li>\n<li><code class=\"language-text\">beforeEach</code>: para executar algo antes de cada um dos testes;</li>\n<li><code class=\"language-text\">afterEach</code>: para executar algo após cada um dos testes executarem.</li>\n</ul>\n<p>Para utilizar essas funções, basta executarmos elas antes dos nossos códigos, algo como:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> calculadora <span class=\"token keyword\">from</span> <span class=\"token string\">'./calculadora'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Calculadora'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// executa algum trecho de código</span>\n    calculadora<span class=\"token punctuation\">.</span><span class=\"token function\">limpa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Soma'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// atual (a ser testado)</span>\n    <span class=\"token keyword\">const</span> atual <span class=\"token operator\">=</span> calculadora<span class=\"token punctuation\">.</span><span class=\"token function\">soma</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// resultado esperado</span>\n    <span class=\"token keyword\">const</span> resultado <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// asserção feita</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>atual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>esperado<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>A <a href=\"https://jestjs.io/docs/pt-BR/setup-teardown#repetindo-a-configura%C3%A7%C3%A3o-para-v%C3%A1rios-testes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documentação</a> do <code class=\"language-text\">Jest</code> tem uns exemplos bem bacanas se quiser dar uma lida.</p>\n<h3 id=\"arquivos\" style=\"position:relative;\"><a href=\"#arquivos\" aria-label=\"arquivos permalink\" class=\"anchor before\">#</a>Arquivos</h3>\n<p>Por fim, apenas um detalhe que vale ser comentado, é comum que alguns arquivos de teste sejam escritos dentro de um diretório como <code class=\"language-text\">__test__</code> ou então com o sufixo <code class=\"language-text\">.test</code> ou <code class=\"language-text\">.spec</code> (que quer dizer especificação).</p>\n<hr>\n<h3 id=\"e-voce-ja-trabalhou-com-testes-🧪\" style=\"position:relative;\"><a href=\"#e-voce-ja-trabalhou-com-testes-%F0%9F%A7%AA\" aria-label=\"e voce ja trabalhou com testes 🧪 permalink\" class=\"anchor before\">#</a>E você, já trabalhou com testes? 🧪</h3>\n<p>Conhecia essas estruturas e já teve experiências com testes? Tem alguma ferramenta favorita que gosta de utilizar e quer comentar?</p>\n<p>Espero que tenha curtido e que essas estruturas possam ajudar você a entender e organizar melhor seus testes.</p>","timeToRead":7,"frontmatter":{"date":"25/05/2020","path":"/anatomia-de-um-teste-em-javascript","title":"Anatomia de um teste em JavaScript","subtitle":"Como funcionam testes comportamentais e que estruturas as ferramentas utilizam para otimizar sua escrita e manutenção","banner":{"author":"Nino Liverani","href":"https://unsplash.com/photos/CKxD_Qh6ULY","image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='1200'%20height='750'%20viewBox='0%200%201200%20750'%20preserveAspectRatio='none'%3e%3cpath%20d='M575%2031l-3%204c0%201-1%202-3%202-4%200-6%202-5%204l2%202%207%202%209%203%2012-4%203-1c5-1%203-6-2-6l-4-2c-2-6-12-8-16-4m-24%2021c-1%203-1%204%201%204l5%201c2%201%202%201%201%202-2%201-1%202%204%204%204%203%206%204%206%206%200%203-1%202%206%204%206%203%2010%202%2016%200%205-2%206-3%206-4%200-2%204-6%207-6l3-2%202-2h-2l-2-1%202-1c1%200%202%200%201-1l3-1c3%201%204%200%202-2-1-2-1-2-4-1-4%201-7%201-7-1l-3%202c-2%204-6%205-10%204h-13c-4%201-9%200-9-2l-2-3c-2-2-3-3-3-1%202%202-2%203-5%201-4-2-4-2-5%200m-24%206l-3%202c-1%200-1%203%201%207%201%203%201%203-1%202l-2%201%201%203%203%201%206%201c4%202%2013-1%2013-5%200-2%204-3%206-2h1l-1-2-1-1-1-1-19-7-3-2v3m103%201l-7%202-4%201-3%201-2%202-2%201v2h2c1-1%202-1%205%203%205%205%208%206%2013%204l7-1%202-2-1-3c-2%200-2-1%200-5v-4l-3-2c-1-2-1-2-7%201m-87%2022h-6a30%2030%200%2000-13%204h4c4-1%204-1%207%201l2%203-5%202c-3%201-4%202-4%204s0%202%208%201l8-1%202%203c3%203%203%203%204%201l1-4c0-3%201-3%209-4h12c7%202%2010%202%2015%201l22-1c-1%201-1%201%201%201l2%202%203%207%203-3%203-3%208%202c7%200%207%200%207-2s-1-3-5-4c-6-2-6-2-2-5%203-2%204-2%206-1h5c0-1-1-2-2-1l-2-1-6-2h-8c-2-1-3%200-4%201l-4%203c-2%200-3%201%200%203%201%201%201%201-2%201l-4-2-1-1-1%202%201%201%201%201-9-2a47%2047%200%2000-18%200c-8-1-23%200-23%201l-1%201-2-1-2-1h-3v-1c2%200%201-2-1-2l-3-2c0-2-2-3-3-2m15%2018l-4%202-4%203c-2%202-4%203-7%203-4%200-6%202-2%202%202%200%203%201%204%204%201%204%202%205%203%204l2%201-2%201-1%201c2%201-3%204-7%204l-5%201h-3v2c2%202%202%202%206%201l6-2%206-5%205-4%203-4%204-6c1-2%202-3%201-5-1-4%200-5%201-3h1c0-3-5-3-7%200m40-1l1%201h4c1%201%201%201-1%201l-2%202-1%201%202%204%205%207%203%204c2%200%203%202%204%203l4%202c3%200%203%200%201-1l-2-2-1-1-1-1h2l2-1c-1-4%201-8%204-8l-2-1-8-5c-1-2-3-3-3-2h-1l-1-1-1-2h-8m-27%2010c-6%203-9%205-10%208l-6%207-4%205c-1%202-8%205-10%205h-2c0%201%203%202%206%201l4%201c1%201%201%201-1%201h-4l-1%201-4%201-6%201h-3c-3%200-3%200-3%202%201%202%203%202%2011%201%204-1%204-1%205%202s4%204%205%202c1-1%205-2%206%200%200%200-1%202-3%202-4%202-4%202-2%203%201%201%201%201-1%204-2%202-3%202-4%201-2-2-3-1-3%203-1%203-1%203%201%202l5-1h5l3-1%202-1%203-2c3-3%204-2%207%202%203%207%206%208%2014%208%209%200%2013-1%2015-8%202-4%205-5%208-2l2%202%203%202h5l5%201c4%200%205-1%204-2-1-4-1-4-2-3-2%202-4%201-6-1-2-3-2-4%200-4s1-2-2-3c-3%200-3-1-3-3l-1-3c-1%200-4-1-3-2l2-7c0-3%202%201%203%206%200%204%201%205%204%207%203%201%206%201%205-1l1-2c1-2%201-2%206-1%207%201%209%201%209-1%200-1-1-2-5-1-3%200-4%200-2-1%201-1%201-1-2-1l-4-1h-3l-3-1-1-1c-1%201-2%200-3-1s-1-1%202-1c5%202%208%202%209%200h-1l-4-1-4-2-2-1-4-5-5-7c-3-5-9-8-10-6s-1%202-2%201c-1-2-1-3%201-2v-1c-3-2-5-2-5-1h-1v-1c1-1-3-3-6-3l-10%204m9%2018l-5%203c-2%201-3%202-3%204l-1%202%201%202c5%203%2023%201%2020-2v-5c-1%200-7-2-9-4s-3-2-3%200m17%207v2c1%202-4%208-7%209h-10c-7%200-8%200-10-3l-4-3v1l1%201-1%201h-1l2%201v1h-6v1l-2%201%201%201c1-1%207%202%207%204-1%201%200%202%202%203l1%203%201%201%202%201%204%201h1c-2-1-1-1%203-1s5%200%204%201l-1%201c3%200%208-2%207-3l3-3%203-3c-1-2%200-4%203-4l2-3c0-1-1-2-2-1l-2%201-2%201v-4c2-3%203-8%202-8h-1m-44%2029l-1%203-1%202h-1c0%202-3%203-4%203l1-3c2-3%202-4-1-2l-4%201-6%203c-4%202-4%202-6%200h-1c0%203%203%205%204%205%202-1%203%200%204%201h3l3-1%202-1h1l-2%205c-1%202-1%202%201%203l1%201c-1%202-13%207-15%207h-2c0%201-1%201-1-1-1-1-1-1-1%201%200%203%202%204%207%202s7%203%204%209c0%202%200%202%204%202h5l-1%201-2%201c1%201%200%202-4%202l-8%202-3%201-1-1v4l3%201c4%200%206%201%203%202l-2%202%202%201%202%201c1%201%200%201-3%201s-4%200-3%202l-1%201-1-1h-1v2c-2%200-2%201%200%204l1%204v6c2%204%203%203%204%200%200-2%201-4%204-5%206-5%207-4%2010%200%204%206%204%205-2%206-8%200-11%202-16%207-6%205-5%205%202%202l11-4-15%209h-1c0%202-2%201-2-1-1-1-1-1-2%201l-2%204c-3%203-2%204%201%202%205-2%2016-2%2021%200l7%203c2%201%202%201%201%202-1%200-2%201-1%202%200%202%200%202-2%202l-2-1-8-1-9%201h-1l-2%201h-1l1-2h-1c-4%200-11%205-12%207-3%206-3%208%201%2010%203%203%203%203%208%202%209-3%2012-3%2013-2%201%202%206%204%2012%206%203%201%206-6%205-10-2-4-1-5%203-2%208%205%208%205%2028%206%2018%200%2018%200%2023-3l6-3c3-3%205-1%203%203-1%202%203%209%205%209l12-5c2-2%2010-1%2016%201%202%201%203%201%206-2%205-3%206-4%204-4-1%201-2%200-3-3-1-6-11-12-14-10-1%201-2%202-3%201h-3l-1-1h-5l-3%201-4%201-5-1%202-2%201-1h-3l-2-1%202-1%207-3c7-2%2016-2%2021%201%204%202%204%201%200-5-2-4-3-5-3-3l-2%202c-2%200-2%200-1-1v-1c-2%201-6%200-4-1l-3-2-3-2-1-1h-2c0-2%206-1%2010%202%206%204%207%202%202-3-6-5-9-6-13-6l-4-1h-2c-3%200-3-2%200-4l2-4%206%201c4%202%205%203%206%206%202%205%202%205%204%201v-7l2-3c2-2%202-3%201-5s-3-3-3-1l-1%201-1-1c0-2-1-2-4-2-2%200-3%200-2-1l2-1h1l1-1-1-1c-1-1-4%200-4%202h-2l-4-2c-2%200-3-1-3-2h5c2%202%203%202%205%200l5-1c2%200%204-1%204-4h-3l-5-1c-5-1-9-2-9-4l-1-1c-1-1%200-1%203-1%204%200%204%200%203-2v-4l-2-1c-2%200-3%200-3-2v-3l-1%201-2%202c-4%200-9-2-9-5%200-2-1-3-2-2-2%201%201%205%205%207%205%202%205%202-4%204-3%200-4%201-5%202-1%203-37%203-39%200l-5-3c-5%200-9-2-6-2l1-1h-2l-4-1c-2-2-2-2-2%200v2c1%201%200%201-1%201-3%200-3%200%201-7%203-6%206-8%2011-8%203%200%204-1%205-3l3-2c2%200%201-2-4-5-4-3-5-4-5-6l-1-2m56%202v4l-2%201h-2l-2%202c-3%201-4%204-2%204l2%202c1%202%202%203%205%203l5%201c2%201%207%200%207-2l-1-1-2-3c0-3%200-3%202-2l3%202c2%202%202%202%204%200l4-2c2%202%204%200%204-3%200-2%200-2-1-1-1%202-2%202-4%201l-5-3c-3%200-6-2-7-3-3-1-4%200-1%202%202%204%201%205-1%203l-3-2-1-2c0-4-2-5-2-1m-45%2014l2%204%202%203h13l13-1%201-1c1%201%204-3%204-5l-2-1-2%201-2%201-8%201-13-1-5-1h-1c0-1-2-2-2%200m-8%2031c-2%206-3%207-1%207%201-1%206%203%206%206l1%201h1l10%202h11c3%201%2016-1%2016-2h2l1-2%202-4c4-2%204-4%202-9-2-4-6-7-6-4%200%201%200%202-2%202l-3%201c-1%201-2%202-5%201l-13-1c-11%201-16%200-16-3s-4-1-6%205m5%2018l-1%202-1%202v1l-1%204c-1%201-1%201-1-1%200-3-3-8-4-8-2%200-1%2010%201%2011%201%201%201%201-1%202-1%201-1%201%201%201%203-1%203-1%203%202-2%205%209%209%2027%209%2015-1%2024-4%2023-9-1-3-1-3%202-3h1v-2c2-2%202-11%200-11-1%200-3%203-4%209l-1%203v-4l-1-4-1-3c0-2-1-1-2%202-2%203-2%204-4%203h-30c-3%201-4%200-5-4l-1-2m2%2030l-4%206-2%203-1-1v1c1%201%200%202-1%203-2%204-1%207%204%209%208%204%2037%204%2045%200%205-2%207-6%203-9v-2l1-1h-1l-2-1c0-1-1-2-2-1v-2l-1-1c-1%201-1%201%200%200%201-4-3-5-20-5l-19%201m-41%2031c-1%204%201%205%207%207%207%202%207%202%2010-1l4-2%201-1-3-1-9-1c-7-2-9-2-10-1m111%200l-8%202c-6%200-8%201-4%202l4%203c3%202%203%202%209%200%206-1%207-2%207-5s0-3-3-3l-5%201m44%201l5%208%204%208c0%201-8-7-8-9-1-1-1%201-1%204%200%204%200%205%203%206l6%207c4%205%205%205%205%202l1-3-2-2-2-4c0-2-5-11-9-15l-2-2m-190%204l-2%203c0%202-7%209-8%209l4-6%203-7-9%2014-3%205v2l1%203c0%201%202%200%207-6%206-6%206-7%207-11%200-3%200-5%202-7l1-2-3%203m34%207c1%202%200%202-2%202l-8%205c-3%203-4%203-3%207%200%203%200%203-1%201-1-3-1-3-1-1s0%203-5%200c-4-2-4-2-5-1l-5%204c-4%203-5%206-1%204l4-2c2%200%202%200%200%202l-2%203-1%201c-3%200-2%202%201%204s3%202%205%200l9-5c6-3%206-3%205-5-2-1-2-3%201-5%202-1%202-1%201-2s-1-1%201-2h2l-1%201v1l3-2c2-1%202-1%202%201l2%202v2h-3c-2%201-1%204%201%205l3%201h-3c-3%200-2%201%208%204l9%204h-4l-15%204h3c3-1%203-1%202%202l1%204v5l-2%201c-3%201%2013%202%2017%201%205-1%202-2-5-2-5%200-6%200-6-4%200-2%200-3%203-4l6-2%206-1h4l2-1-3-1h-1l-1-1-3-2c-1-2-2-2-4-2-2%201-2%200-1-1l-1-2c-2%200-5-6-4-7v-11l-3-1c-2-1-2-1%201-1%202%200%203%200%203-2s-1-2-6-2-6%200-5%201m110%200c0%202%202%203%205%203l3%201h-4c-3%200-5%203-3%206%201%202%200%2012-2%2013l-2%201-1%202h-2l-3%201-3%203-1%201v1h-1l1%201%205%201%206%201h2c2%200%202%200%202%203%200%202%200%202%201%201%201-2%201-2%201%200l1%204v1l-1-1h-1l-5%201c-8%200-9%202-1%203%204%201%2011-1%2011-3v-4c2%200%201-7-1-8l-4-2c-6%200-6-1%200-4%204-2%206-2%205-3s0-3%202-3v3l4-1%201-2c-2%200-2-1-1-3%201-1%201-1-2-2-3-2-4-5-1-5l3%201%202%201c2-1%205%201%205%203l3%201c2%200%202%200%201%202l-5%201c-3%200-2%201%205%204l10%206h5c3-1%203-3-1-7l-1-2h2c1-1%203%200%205%202l5%202-5-4-8-6-2-2-4%202c-5%202-5%202-5%200l-1-2c-1%201-1%200%200%200%200-2%200-2-2-1v-1c3-2-7-8-13-8-2%200-2%200%200-1%204-1%202-2-4-2l-6%201m-177%2038l-2%201h-2l-5%205c-3%203-3%205-3%208s0%205-2%206c-2%202-2%202%200%202%203%200%207-2%207-3%200-2%206-11%207-10v2l-2%202-2%204-2%203h6c5%200%207%200%209-2l8-8%207-5%204%202%205%203%201%201%204%201%201%202-2%202-2%201s-2%200-3%202c-2%201-2%202%200%202%202%201%200%204-3%204-2%200%200%202%203%202%203%201%204%200%209-4%207-6%207-6%2010-3%203%202%207%204%207%202l2-4c3-2%203-4%200-4-1-1-2%200-3%202-1%204-2%204-7%201l-4-3-3-2-9-4-8-4c-8-3-21-5-24-4h-2m237%201l-3%201a160%20160%200%2000-29%2015c-4%202-6%202-7-1-1-4-3-3-2%201%200%202%200%202-1%201-1-2-1-2-1%200l2%202c2%200%203%202%201%202h1l6-2c4-3%203-3%2010%203%207%205%207%206%2012%204%202-2%202-2%200-2s-4-2-2-3c2%200-2-5-5-6-4-2-1-4%207-8l6-3%204%203%209%208c4%204%205%204%2010%204h6l-2-4-3-4v-2c-2-1-6-7-5-7s3%202%208%2010l5%208%204%201c3%200%203%200%201-1l-2-6c1-3%200-5-1-6v6l-2-3c-3-3-4-6-2-6l-1-3c-2-2-2-3-13-3l-11%201m-147%202s1%202%203%202c3%201%203%203%201%2013v3l-2-2-2-2-1%202%201%205c2%200%202%201%201%201-1%201%200%201%201%201l4%201%202-1-2-1c-2%200-2%200%200-1l2-1%201-9c1-9%200-13-5-13-3%200-4%200-4%202m67%200c-3%205%200%2021%203%2021%202%201%202%201%200%201s-3%200-2%201l7-1c1-1%201-2-2-2-2-1-2-1%202-1l5-2c3-3%201-3-4-1s-5%202-4%200c0-2%200-2-1-1l-1-1v-7l1-2v-2l1%202%203%201c2%200%202%200%200-1s-4-3-2-3l2-2c0-3-6-2-8%200m27%2029v11h-5l-11%201h-6v-4c-1-1-1-2%201-3l1-2c-1-2-8-1-7%201l-1%202c-2%200-3%201-4%205%200%203%200%203%202%202%202-2%206-3%206-1l1%201h1l2%201%209%201%207-1%205-1%204-1-2-1c-2%201-2%201-1-1l1-4c2-1%200-7-2-7l-1%201m-92%203v2c2%202%201%206%200%206a372%20372%200%2001-25%201c0%203%2023%203%2025%201%203-2%206-2%209%200%202%201%202%201%202-1%200-3-2-6-3-6s-2-1-1-2c0-2%200-2-3-2l-4%201m-106%206a141%20141%200%2000-14%204l-1%201v1l-1-2c0-2%200-2-1-1l-2%202c-2%200-2%200-1%201l4%203v5l-2%202-2%203-3%202-3%202v1l-2%202c-2%201-1%201%204%201l10%201c4%201%204%201%2010-5s8-8%2023-17l6-4%204%202h6c-1-1-3-2-4-1v-1c1-1%201-1-1-1h-3c1-1-6-2-15-3-2%200-7%200-12%202m260%200l-7%202c-1%201-13%205-20%206-6%202-7%202-7%200-1-2-4-1-4%201-1%201%200%203%201%204l2%201h-2c-2%200-1%201%202%202l10%208%2011%2010c6%204%206%204%209%203%203-2%209-4%2018-5l7-2c2-1-23-15-26-15-1%201-1%201%202%203%203%201%203%201%202%202-2%200-3%202-1%202%202%201%200%203-2%203-1%200-2-2%200-2v-1h-3c0%202-3%201-6-1l-7-3c-11-4-10-5%202-9%2018-7%2017-7%2022-4%208%204%2020%2014%2025%2019%205%204%205%205%208%204l10-1c4%200%206%200%205-1l-2-1c-2%200-2%200%200-1v-1c-2%200-9-8-9-9h-1v-4l3-4%201-1-2-1-1%201c-1%202-3%202-2-1h-2c0-1%200-2-1-1l-2-1c-6-4-24-5-33-2m-218%208l10%204%204%201h-3c-3%200-3%200-1%201%201%201%201%201-1%202l-7%202c-1%201-3%202-4%201l-2%201-6%203h-2l-4%202c-2%200-2%200%200-1l2-3c-1-1%200-2%201-2v-1c-2%200-2%200%201-2l1-2c-3%200-30%2016-28%2016l8%202%2020%205%2014-9a1865%201865%200%200014-12l3-2v-5c-2-2-3-2-4%200h-4l-7-1-6-2c-6-2-5-1%201%202m128%2011l-1%203-1%207v4h-1v2l-1%201h2l3-1h6c2%200%202-1%201-3-1-1%200-2%201-3l1-2c-1-3-3-2-3%200h-1c-2-2-4%200-4%204l-1%203c-3-2%200-13%203-13v-1l-4-1m-207%2027l-1%204-1%207-1%204-1%201c-2%203-1%208%202%209l27%208%2013%204%2011-6c24-11%2029-14%2025-14l-1-1%201-1c2%200%202-1%201-3l-1-6v-3l-2%202-1%207-1%204c-2%202-22-2-34-6a8493%208493%200%2000-27-5l-5-3c-2-2-3-3-4-2m355%201l-2%202c-2%201-8%203-13%203l-15%204c-10%203-32%207-37%207-1%200-2-1-1-2%200-4-2-12-3-9s-1%207%201%208c1%202%201%202-1%203-1%201-1%201%201%201%201%200%202%200%201%201-1%200%200%203%202%203l9%204%2015%207c10%204%2010%204%2038-5%2014-4%2014-4%2010-17-3-10-3-11-5-10m-150%208l1%201%201%201c-1%201%200%201%201%201v-1l4%201c4%202%205%203%203%203-2%201-3%203%200%206%202%203%203%203%205-1%201-3%201-3%204-3%203%201%207%204%206%205l1%204c1%203%201%203%203%202l1-4c0-1%201-2%203-2%202-1%202-1-6-5l-9-4-2-1-7-2c-4-2-6-2-6-1h-1l-1-1-1%201m-64%202l-12%205-9%204h-3l2%201%204%205c2%204%204%202%204-3%200-3%201-4%205-5l4-2%201%204c1%203%203%204%205%201%203-3%203-6%200-6-2%200-1-1%203-3%205-3%203-4-4-1m7%208c0%203-1%204-9%206l-13%205c-14%205-20%209-7%205l6-1h1l2-1%204-1%2010-3c9-2%2010-2%208-3v-1h2l1%201%201-1-1-2v-3c0-3%200-3-2-3h-2c-1-1-1%200-1%202m59-2l-1%201c-1-1-1%200-1%202l-1%203c-1%200-2%205-1%206h1c0-1%201-2%203-1h4l2%201%209%202%208%202v1l3%201h7c4%202%205%202%205%201l-28-11c-3%200-8-3-8-6l-1-2h-1m-218%2022c-4%206-4%2021%200%2029%204%207%2018%2019%2023%2019l7-3c2-2%207-3%2010-4l8-2%205-1c5%200%2021-6%2021-8l-4-2c-4-1-6-3-3-3v-2l1-5%201-4v3c0%205%202%204%202-1l-1-4c-2%200-1-2%201-4%201-1%201-1-1-1-2%201-5%207-5%2013v5l-5-1-5-1-4-1-10-2-8-2c-1%201%200%201%201%201%203%201%202%201-5%205a173%20173%200%2000-20%2012c-1%200%207-16%2010-19%202-2%202-2%207-1%207%202%208%202%201-1-13-6-26-13-26-15h-1m378%202l-3%201-3%202-7%204-5%203-2%201c-1%200-5%201-7%203-5%202-4%203%201%201%206-3%208-2%2011%203%204%205%206%2010%206%2013%200%201-2%201-13-6l-12-7-3-2-1%201-3%202-11%202-11%202-2%201-4%202-4%202%207%203%2013%205c14%202%2026%206%2027%209%203%204%2022-8%2027-18%203-5%204-16%203-24-1-5-2-6-4-3m-228%209l-4%201-12%203-2%202%2015-2v3c1%204%202%205%205%204%205-3%204-7-2-7h-3l3-2c5-1%206%200%206%205l1%203c1-1%200-9-1-10l-4-1c-3%200-3%200-2%201m75%200l3%203%204%201h-4c-4%200-5%201-3%205%203%203%206%203%207-2%200-3%200-3%203-3a150%20150%200%200012%203l3%201h2c0-2-17-7-20-7s-4%200-3-1%201-1-2-1c-2%200-3%200-2%201m-70%2016l-2%201-7%206h-4l-2%203-2%202c-2%201-2%201%200%201s3-1%203-2l3-1h5c3-1%204-1%204%201l1-1%201-2%202%202c2%204%203%204%202-3l-1-8-3%201m66%200l-1%207c0%205%200%206%202%204%201-2%202-2%204-1%205%201%206%201%206-1h2l4%201-1-2-4-2c-2%201-5-1-5-4%200-1-1-2-3-2h-4m170%2013l-2%205-5%207-7%207-2%204v1l-10%203c-2%202-5%202-6%202-4-2-7-2-7%200s0%202-1%201l-4-1c-1%201-1%201%201%202%201%201%201%201-1%201l-2%201c1%201-4%203-7%203-2%200-2%200-1-1v-2l-2-1%202-1v-7l-1%201v-2c0-2%200-3-2-3-4%200-6%200-5-1l3-1h1c-3-2-4-2-5%200%200%201-3%202-5%200l-7-2-12-3h-6l-2%201%201-2c1-1%201-1-1-1-2-1-2-1-2%202-1%201-1%202%201%202l-1%201c-2%201-2%201-1%202l3-1h3c0%202-2%203-5%202h-6l2%201%201%201c0%202-3%201-5-1l-6-2c-4%200-8-2-8-4%200-1-3-1-3%201v1l3%201c0%202%209%205%2011%205l2%201%205%201c3%200%204%200%203%201-2%201-1%201%202%202l4%201%203%202%202%201v1l5%202%206%201v1h7c2-1%202%202%200%202-2%201-2%201-1%202l3-1%202-1%202-1h1l3%202c3%201%201%203-3%202-5-1-4%201%209%207l16%209%204%203%204-3c7-5%2012-13%2011-14v-7c0-5%202-4%203%201l1%204%202-4%203-6%202-4%203-9c0-5%201-5%201%205l1%2011v-13c0-8%200-13%202-15l1-7c-1-2-1-2-1%201m-238%207c-4%204-5%204-5%201%200-2-1-3-3%200l-3%201-7%203c-6%204-8%206-4%208%202%202%202%202%200%204l-4%203-2%203-2%202-1%201-4%204-2%201c-1%202-5%204-5%203h-1l-1%202-2%202c-2%200-3%201-4%203l-2%202v1c0%202-7%206-8%205l-5%202c-4%203-5%205-3%205v1l-2%201v-2l-2-1-4%202-5%203-4%203c-2%202-5%203-6%201-1-1%200-1%201-1l2-1h-14c-2%202-6%201-7-1-1-3-5-4-4-1h-2v3l-2-1v-4l-2%201c-2%202-2%203%205%2010l3%203-3%202c-3%201-7%209-7%2012s-7%200-12-5l-5-5-2-1-1-3-3-3-3-4-1-1-4-6-3-5-2-5-2-5c-1%200-2%209-1%2012a600%20600%200%20014%2019l2%206%204-6%203-5%202%203%203%204-1%203-5%205-2%203%204%206%206%209%203%203%206-7%207-6%204%202%205%203-11%208-3%202c-2%202-2%203%203%206%203%201%203%201%204-1l1-1c0%202%203%203%206%201%202%200%203-3%201-3v-1l1-2c0-2%200-2%203-1h2c-1-2%202%200%204%202%201%202%203%203%203%201v-2h-1l-3-6h-2l-3-3c-5-1-3-1%205-2l21-5a610%20610%200%200035-19c0%202-4%207-12%2016-6%206-13%2010-21%2011v1c1%201%201%201-2%201h-2l-1%202v-1l-1-1-1%202c1%201%200%201-2%201l-2%201-2%201c-1%200-2%200-1%201l-2%201-2%201c0%202%205%200%2016-5l13-6c1%201-12%2012-14%2012-1%200-2%201-1%202l-2%201-2%201-3%201v-3c0-1-1-2-4-1h-5l-2%203c-2%203-4%204-4%202%200-1-5-3-6-2l-3%201-3%201h-1l-1-1v2l3%202%201%201c0%203%203%203%207%201l3-2%203%202%202%202-5%202c-6%203-9%207-8%2012%200%202%200%202-5%200l-5-3-2-2-1-1h2v-1l-1-2c-2%200-4-3-3-4l-2-1h-1c1-1%200-4-2-3h-2v-1l-1-2c-1%201-5-3-4-4l-2-2-1-1-2-3-4-5-4-5-3-4c0-1%200-2-1-1l-1-2-1-2v19c0%203%205%2017%208%2021l1%202%201-2%206-12c1-1%202%200%204%203%203%204%203%204%202%207v6c1%203%201%204-2%206l-2%203%203-1c2-2%202-2%203%201%202%207%207%208%209%201%201-6%201-6%206-2%2013%2010%2022%2010%2033%202%206-5%207-4%203%204-6%2013-19%2020-30%2015-2%200-2%200-1%202v1c-3-1-5%201-7%205l-1%203-3-3-2-3c-1-3-22-25-23-23v-1l-1-2h-2v-2h-1l-1-2-3-3-2-3%201%205%204%209c0%207%203%2016%205%2020%205%2012%2017%2027%2024%2031l4%203c14%209%2022%2011%2031%205%2012-8%2017-15%2040-61%203-8%207-14%208-15l11%203%2015%205%2021%205c2%202%207%202%208%200%202-3%204%200%204%204l1%2014c1%202%200%202-6%203l-11%202c-7%200-8%201-8%204s2%206%203%204h13c11%201%2011%201%209%203s-10%203-20%203c-9%200-10%201-10%206%200%202%201%203%209%203%207%200%208%201%2010%203%201%202%202%202%204%201%203%200%204%200%206%202%202%201%204%208%202%208a223%20223%200%2000-22%204c-5%200-6%201-5%204%200%203%202%204%205%203s23%202%2023%204l-4%201c-13-2-22%2010-14%2019l4-1c3-1%208-1%208%201%200%203%205%205%2015%205%206%200%209%200%208-1l-5-1h-3l1-7c0-5%200-7-2-10v-5c-1-3%207-11%2015-15%205-2%2017-2%2023-1%2010%202%2027%2012%2028%2016v9l-1%201h-2c0%201%201%202%202%201l2-2%201-1c2%200%201%202-1%204l-2%203-1%201v4l1%204h7c7%200%207-1%202-3-2-1-3-2-3-7v-6l3%201c5%202%207%201%207-3%200-2-1-3-5-5-5-1-5-2-6-6l-4-8c-2-2-2-5%201-5%205%200%205-7%200-10l-3-3h-1v-1c1-4%201-4%207-2%207%202%2010%201%2010-3%200-2-1-3-10-6l-11-2v-1l-1-1-2-1c0-2-19-9-28-9-5%200-14%201-17%203-2%200-2%200-1-1l4-2c2%200%202%200%200-1-3%200-5-3-2-3v-1l1-4%202%201c1%201%201%201%201-1l-2-3c-1-2%200-4%202-2%202%201%201-7-1-9v-2l-2-1c-6-1-6-3%200-3l9-1%2010%202%2010%202%207%202%203%202%204%204-1%201c-1%200-2%201-1%202l-1%201-2%201a1718%201718%200%20011%2013l2%203%202-2c2-2%202-4%202-13l1-11%203-2%2011-1%2015-3c8-2%2013-3%2012-1v1a532%20532%200%200126%2050c6%2012%2011%2017%2020%2023s14%205%2033-6c14-9%2026-28%2030-48l4-14%201-3c-1-1-2%201-3%203l-3%205-1%202h-1c-1-2-1-2-3%201l-2%203h-1l-5%204c-4%204-11%2012-10%2014h-1c0-1-2%200-2%202l-3%203c-2%202-3%202-4-1-2-4-6-5-15-6-10%200-18-5-23-16-4-7-3-9%204-4%2012%208%2020%208%2033-3l4-3%201%203%201%204c0%206%206%205%208-1%202-4%202-4%203-3l3%201-1-2c-3-1-3-1-3-6v-7c-1-2%200-3%202-5l2-4c0-2-5%203-6%206-1%201-1%201-1-1s-2-2-2%201l-3%204c-2%201-4%203-4%205-1%203-4%206-8%206-2%200-2%200-4-4-1-4-2-5-7-7-5-3-6-3-4-4l2-2%205%201%204%202%204-4%205-4%204-3%203-2-3-2-9-6c-7-5-7-5-1-6l5-2%207%205%207%205%207-8c6-8%206-8-1-15-2-2-2-3-1-5v-2l1-1%202-1c1-2%201-2%203%201l3%207%202%203%202-7%203-10c1-6%202-17%201-20l-1-2-1%202c-1%205-7%2017-9%2019-2%200-3%201-3%202%200%202-1%204-2%203l-1%201c0%203-13%2015-18%2017-3%201-3%201-4-1-1-6-4-10-6-12-3-2-3-3-2-3l8-10-23-13c0%201%202%203%209%206s7%204%205%204l-3%202c0%203-4%206-5%204h-2l-2%202v-1l-1-1-2-2c-1-2-7-1-6%201%200%203-4%202-6-1-2-2-3-3-4-2l-4-2c-3-3-7-4-7-2l2%201%202%202-4-1-2-2c2%200%201-2-3-4-4-4-6-4-3-1v2l-2-1-1-2-7-6-5-7c-1%201-4%200-3-1%200-1-1-2-3-2l-3-3c0-1-1-2-3-2l-3-2-5-6c-4-4-4-5-4-7%201-4%201-6-1-7l-5-3-6-2-3-2c-2-1-2-1-2%201l-1%203-1-1-1-2-4-3-2-1h-1c-1-1-1-1-3%201-3%203-5%207-4%208l-1%203c-2%203-4%2016-2%2016s7%204%207%206l1%202%203%204c0%202%202%204%203%204l2%202c1%201%201%201%200%200l-11-1c-10%200-10%200-12%207l-1%205a765%20765%200%200122%203c4%201%2010%207%2010%2011-1%202-3%203-4%201-1-1%200-1%201-1v-2l-5-2c-3%200-3-1-3-3l-3-1c-3%200-4%202%200%204l2%202%201%201%201%202c0%202%200%202-1%200-2-1-2-1-2%201l1%203c1%200%202%201%201%205v4l3-1%205-2c2%200%204-2%204-4s5-1%209%200a281%20281%200%200126%2049c3%200-1%201-8%203-10%201-23%202-25%200v-4c0-3-1-4-5-2-1%202-1%202%201%205s1%205-2%203h-1l-1-1c-3-3-11-6-24-7l-10-1c-1-1-13%200-15%201-2%202-2%200%200-2%202-3%203-5%200-5l1-1v-1c-3%200-2-4%200-6%202-1%203-3%203-6l1-5%201%202c0%203%201%203%203%201%201-1%201-2-1-2-1-1-1-1%201-1l3-1c1-2-5-2-7-1h-8c-1-1-1-1%202-1l4-1c2-2%2028-2%2034%200s9%207%205%206l-1%201%201%201%201%205%201%206%201%205c0%206%200%207%202%206s2-2%201-8v-8h4l10%202c8%203%2010%202%2010-3%200-2-1-3-7-5-12-4-17-6-17-8%200-3-2-6-4-7-4-2-34-3-47-2h-7l-3-2%202-1c2-1%202-2%201-3s-1%200-3%202l-4%203c-2%201-2%201-1%202l2%204c0%203-1%204-9%207l-13%206c-6%202-7%204-5%207h9l12-2%205-1v4c-1%209-6%2013-13%2013l-2%202-1%202-1%201-1%202v2c3%202-13%200-24-4l-13-3c-3%201-2-2%207-20s15-28%2017-28l5-1c3-1%204%200%204%201%200%202%202%204%205%204l5%201c2%201%202%201%202-7v-3l1%202c0-1%200-2%201-1l1-1-1-1-1-4c0-2%200-3%202-3l3-1-4-1-3%201c1%202%201%202-4%203-3%201-4%204-2%204v1h-2l-2-2-1-1v-1c1%201%204-1%203-2l9-6a762%20762%200%200121-4l-4-10c-6-1-16-1-18%201h-3l1-3h2l4-5c3-7%207-11%209-11%202%201%202%200%202-1l-2-8-1-7-1-3c-1-4-2-7-4-7l-1-1c-1-3-3-2-7%202m-162%200l-1%2014v12l1-10c0-8%201-10%201-7l10%2025c1%201%202%200%202-3%200-6%201-7%203-2v6l-1%202%2011%2013c4%203%205%203%2011-2l15-8%2014-7-6%201c-6%200-6%200-5-1l2-1%201%201v-2h1c3%200%2010-2%2013-4%202-2%204-1%202%201-1%201-1%201%201%201l6-3c4-2%208-4%208-6l1-1%202%201c1%202%202%201%202-1-1-1-1-2%201-2l10-1c0-2%201-2%204-2l4-1%202-3c3-2-9-2-13%200l-5%201-2-2c-2%200-1-1%203-1%201-1%203-1%203-3l-1-1a3286%203286%200%2000-5%201c0-2%200-2-8%200l-14%204-8%202-7%202c-5%200-9%202-4%202v1l-1%205v5l-1-4-1-4v4c1%208%200%208-7%205l-4-3c3-2%200-2-8-2-6%200-8-1-7-2h-4l-3-1-4-3-5-6-6-7c-2-4-3-5-3-3m284%2071l6%208c10%2012%2013%2015%2016%2016l5%202%205%201h2c-1%201%200%201%201%201%202%200%202%200%201%201s-1%201%201%201h1c-1%201-1%201%201%201h2l2%202%205%201c4%203%205%202%207-1l2-2%201-1%201-2%201-1v-1l3-1c1-2%200-2-3-1-5%201-26-4-28-7l-2-1-7-3-11-7-5-4-4-3c-1-2-3-1-3%201m112%2017l-1%204-4%205c-2%201-3%202-2%203%200%201%200%202-1%201l-3%204-4%206-1%203%207%2014h2c2-3%206-11%206-15l2-3v-12l1-7c1-3%200-6-2-3m-87%2012a13702%2013702%200%200016%2013c3%202%204%202%204%201l1-2%205-1v-1l2%201h1l2%201v3c4%201%209-2%209-5-1-2-1-2-3-2l-2-1h-1l-1-1c0-1-1-1-2%201-3%203-8%202-21-4-12-7-15-7-10-3m59%2068c-11%2011-14%2012-23%2011h-8c-4%202%208%2011%2014%2011l5-4%2011-12c14-15%2015-18%201-6m-348-5c2%203%2025%2027%2027%2027%204%200%2015-7%2015-10l-9-1c-10%201-14-1-23-10-9-8-11-10-10-6m194%204c-9%201-23%205-16%205l3%201-2%201c-2-1-3%200%200%202v1l-2%202-2%204c-1%201-1%201%201%202%201%201%201%201-1%201-2-1-3%201-3%206l-4%205c-5%205-4%206%201%202%209-7%2030-9%2044-5l10%202%203%202c2%202%202%201%201-3l-2-4-2-4c-2-1-2-2-1-3%202-1%204-4%204-6h-1l-1-1c1-1-4-5-9-7l-17-4-4%201'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5957446808510638,"src":"/static/d1b07c374cbb80f17fd06352256295c3/21095/banner.jpg","srcSet":"/static/d1b07c374cbb80f17fd06352256295c3/36b10/banner.jpg 300w,\n/static/d1b07c374cbb80f17fd06352256295c3/88367/banner.jpg 600w,\n/static/d1b07c374cbb80f17fd06352256295c3/21095/banner.jpg 1200w,\n/static/d1b07c374cbb80f17fd06352256295c3/97ce3/banner.jpg 1800w,\n/static/d1b07c374cbb80f17fd06352256295c3/d23b7/banner.jpg 1920w","sizes":"(max-width: 1200px) 100vw, 1200px"},"fixed":{"src":"/static/d1b07c374cbb80f17fd06352256295c3/58d74/banner.jpg"}}}}}}},"pageContext":{}}}