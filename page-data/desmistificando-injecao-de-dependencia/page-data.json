{"componentChunkName":"component---src-templates-post-article-index-js","path":"/desmistificando-injecao-de-dependencia/","result":{"data":{"markdownRemark":{"id":"b3d4601a-6722-58f1-a2a6-c1aa701bd487","html":"<p><strong>TL;DR</strong> - receba como parâmetro componentes responsáveis por realizar efeitos colaterais na sua aplicação</p>\n<hr>\n<p>Lidar com <em>efeitos colaterais</em> na sua aplicação é algo bem cotidiano.</p>\n<p>Não é rara a necessidade de criar algum componente responsável por fazer alguma chamada <strong>HTTP</strong>, publicar um conteúdo em uma fila ou realizar qualquer mudança de estado em uma aplicação.</p>\n<p>Em algum momento, principalmente quando relacionado a esses assuntos de <em>\"side-effects\"</em>, você já deve ter se deparado com o termo <strong>injeção de dependência (ou <em>\"dependency injection\"</em>)</strong> e muito provavelmente deve ter sido em um artigo com diversas classes/funções/métodos/containers e explicações um pouco mais complicadas do que deveriam  sobre o tema.</p>\n<p>Acontece que o fundamento sobre <strong>injeção de dependência</strong> é bem mais simples do que parece e pode facilitar seu dia-a-dia mais do que você imagina, principalmente se estiver em um ambiente que costuma fazer uso de testes automatizados.</p>\n<h2 id=\"fundamento\" style=\"position:relative;\"><a href=\"#fundamento\" aria-label=\"fundamento permalink\" class=\"anchor before\">#</a>Fundamento</h2>\n<p>Para explicar um pouco mais detalhadamente, acho que vale a pena exemplificarmos diretamente no código.</p>\n<p>Imagine que em algum cenário da sua aplicação, você possui uma função que precisa fazer uma chamada <strong><em>get</em></strong> em uma <strong>API</strong> qualquer para acessar e formatar algum dado.</p>\n<p>Algo como:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// módulo qualquer que fica responsável por fazer o fetching dos dados</span>\n<span class=\"token keyword\">const</span> fetcher <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetcher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// acessa o dado que você precisa</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// formata o dado de qualquer maneira</span>\n  <span class=\"token keyword\">const</span> formattedData <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>any<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// retorna o dado formatado</span>\n  <span class=\"token keyword\">return</span> formattedData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> getResources<span class=\"token punctuation\">;</span></code></pre></div>\n<p>O elo de <strong>dependência</strong> existente nesse trecho de código fica claro pelo fato de o componente responsável por realizar a chamada ser declarado fora da sua função e utilizado dentro dela.</p>\n<p><strong>Injeção de dependência, fundamentalmente, é nada mais do que inserir determinado código num escopo onde você acessa valores globais ou declarados fora desse mesmo escopo.</strong></p>\n<p>Se realizarmos um pequeno ajuste nessa função, para utilizar <strong>injeção de dependência</strong>, teríamos algo como:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fetcher <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetcher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// inserimos a \"injeção\" ao receber fetcher como parâmetro</span>\n<span class=\"token comment\">// podendo até setar o \"default\" como o fetcher do módulo que precisamos</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> fetcher <span class=\"token operator\">=</span> fetcher</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> formattedData <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>any<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> formattedData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> getResources<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vê a diferença? Agora você pode modificar ou passar um componente <code class=\"language-text\">fetcher</code> diferente ao executar sua função. A forma como os parâmetros são declarados podem variar dependendo da sua abordagem (poderia ser um objeto, por exemplo, ou qualquer forma que achar mais adequada).</p>\n<p>Ou seja, você garante um código extensível para ser executado assim:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">await</span> <span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://my.api/v1/endpoint'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ou assim:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// cria um componente \"fake\" para realizar essa chamada</span>\n<span class=\"token keyword\">const</span> fakeFetcher <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> <span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://my.api/v1/endpoint'</span><span class=\"token punctuation\">,</span> fetcher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"e-quais-as-vantagens-de-utilizar-injecao-de-dependencia\" style=\"position:relative;\"><a href=\"#e-quais-as-vantagens-de-utilizar-injecao-de-dependencia\" aria-label=\"e quais as vantagens de utilizar injecao de dependencia permalink\" class=\"anchor before\">#</a>E quais as vantagens de utilizar injeção de dependência?</h2>\n<p>Além de evitar a utilização de variáveis e códigos globais ou fora do escopo declarado sem necessidade, você também ganha uma certa facilidade na hora testar unitariamente esses módulos.</p>\n<p>Para testar primeiro cenário, onde o módulo <code class=\"language-text\">fetcher</code> era utilizado diretamente, você muito provavelmente precisaria fazer um <code class=\"language-text\">mock</code> desse módulo e manipular os retornos em todos os casos que precisar.</p>\n<p>No segundo cenário, basicamente, você passa um objeto <code class=\"language-text\">fetcher</code> da forma como você precisa e consegue testar os casos de sucesso e falha muito mais tranquilamente, sem precisar fazer um <code class=\"language-text\">mock</code> manual dessa dependência.</p>\n<p>Conforme a sua aplicação ou componente que realiza esses efeitos colaterais cresce (começar a fazer outros tipos de requisição, por exemplo), optar por essa abordagem pode ter ganhos que facilitam seu desenvolvimento (e seus testes) de forma bem clara e objetiva em longo prazo.</p>","timeToRead":3,"frontmatter":{"date":"20/02/2020","path":"/desmistificando-injecao-de-dependencia/","title":"Desmistificando Injeção de Dependência","subtitle":"A verdade é mais simples do que parece","banner":{"author":"Sara Kurfeß","href":"https://unsplash.com/photos/Ox9sNtoD9Kg","image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='1200'%20height='750'%20viewBox='0%200%201200%20750'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20375v375h152l153-1%204-14%205-19%206-32c2-20%205-34%209-50%206-30%206-28%2019-60l6-14c4-12%2014-26%2027-36%209-8%2018-10%2025-5s8%208%208%2018c-1%209%200%2012%204%2011l4-8c3-8%204-11%208-14%203-3%204-3%2010%201%205%204%2010%205%2020%208%2013%203%2014%204%2015%209%200%204%201%205%204%205a552%20552%200%200116%204c10%200%2011%200%2012%204%203%207%201%2045-3%2057-2%204-4%2013-4%2019-2%2012-3%2015-7%2026-3%2012-6%2022-5%2023l6-8a110%20110%200%200111-18l10-13%206-8c4-6%2012-13%2017-13%202%200%209%207%209%209l1%201c1%201%202%2011%201%2017l-2%2016a303%20303%200%2001-17%2083c0%202%200%202%204%202%203%200%203-1%208-9l7-15c5-14%2012-27%2020-38%202-2%203-2%207-2%2011%200%2015%205%2019%2026%202%2014%202%2017%201%2025l-2%209-1%204h608V0H0v375m555-153c-8%208-13%2011-15%209-2-1-2-2-1-5l1-4-2%202c-1%204-3%205-4%201v-2l-4%202-3%204%201%202%205%203c4%202%2010%202%2011%200s5-5%205-3c-1%204%200%207%202%207l2%202c-1%201%203%208%205%208%204%200%205-2%204-7v-5l1%201%202%201v-4c-1-1-1-1%201-2l1-1-2-2c0-2-3-9-5-10-1-1-3%201-5%203m145%2023l-3%201c-3-1-3-1-3%203l3%205v3c-1%202-2%202-3-1l-2-4-2-2c0-3%200-4-3-4-4-1-4%201%202%208%204%206%205%208%204%2010%200%202%203%204%203%203v1l1%202%201%201c0%202%202%204%203%203%202-1%206%200%206%202%201%203-1%204-2%201-2-3-2%201%200%204%201%203%201%203%203%202%201-2%203-1%201%201-1%202%201%209%203%209l1%201-3%201c-2%200-2%200%200%2010l1%2017%201%2011c2%201%202%205%201%206l-1%205-1%205-1%208%201%207c2%200%203%205%202%208l-2%2024-2%208-2%207c0%205%200%206-2%204-2-1-2-1-3%202-2%204-3%209-1%209s3-2%202-2c-2-1%200-4%202-4l1%203-1%207c0-2%205-9%207-11l3-5c2-4%205-6%207-6%201%201-1%205-4%209-8%208-18%2035-18%2050l1%205c2%200%201%203-2%205l-2%203%202-1c1-2%202%200%202%203l-2%201c-3%200-4-2-4-4v-2l-1-4c0-3%200-4-1-3l-1%203-1%204-1%2012%201%203c0%203%202%203%203-1%201-3%203-3%203%200l2%201c2%200%203%202%204%207l2%206c2%202%202%202%202-2a86%2086%200%20016-22c1-4%203-6%203-3h2l1%202h1c2-1%204%200%204%202l2%203%201%204c0%203%203%202%204-2l3-8%203-5%201%203c1%204-2%2013-5%2016-2%203-2%209-1%2018l3%206v3l1%206c1%202%201%200%201-9%201-10%201-12%203-12%201%201%202%200%203-1%203-4%205%2015%202%2025l-1%207-1%202c-1%201-1%201%201%201%203-1%203%202%203%2011a3611%203611%200%2000-5%2070c2%202%202%202%201%208v19l-1%2012-1-6-1-6-1%202-2%207-2%205v-8c-3%203%201%2029%204%2030l1-5c0-8%201-12%203-12v1l-1%208c0%206%200%206%202%206%203%201%203%201%204-22a2053%202053%200%20015-69l1-31a377%20377%200%2000-8-109c1-5-8-4-10%201-1%203-1%203-1%201v-13l1%201%208%204v-14l-1-5-2-6c-1-6-2-17-1-18v-3l-2-8-2-9-2-5-2-4-2-4-1-7c-1-6-1-7%201-8v-3h-2l-2%201c-2%200-2%200-1-1%202-2%202-3%201-3-3%200-3-2-2-3l1-3c-1-1%200-1%201-1%203%200%203%200%202-3-2-3-2-7%200-10l1-4v-13c1%200%202-1%202-3l3-2%203-2c1-3%201-5-1-5l-5-2c-3-1-5-2-7-1l-6-1%202-1%2011-1c3%200%206%200%205-1v-4l4-25c1-4%200-4-3-8l-4-5-2-1h-3c-4-4-27-6-28-3m76%2017c-2%202-10%202-10%201-1-3-3-2-6%203l-3%207-2%203-2%205%201%202h2l-2%201-2%201-1%203c-4%204-5%2025-3%2037%202%208%203%208%203-1%200-7%201-16%203-21%202-4%201-5-2-4-2%201-2%201-1-1l2-5%202-3%203-5c2-5%203-5%201-4-2%200-2%200-2-2s1-2%203-2%204-1%207-5l6-5%201-1%203-3%202-2c0-1-1-1-3%201m-141%201c-2%200-3%201-3%202l-2%202-4%202c-1%201-1%201%203%201l4%201c0%201%2012%206%2017%206l9%203c6%202%208%203%2016%2013%209%2012%209%2011%2011%2026l1%204v2l-2%208-3%208-1%204c0%202%202%201%203-2%202-3%202-3%202-1v4c2%202-3%2011-6%2012l-3%203-1%201-4%202c-2%202-5%203-3%201h-3c-2%200-2%200%202-3%206-5%205-5-3-1-23%2011-50%202-60-21-2-4-4-5-4-2l-1%203v-3c0-3%200-3-4-3-4%201-5%202-3%203%201%201%202%202%203%201v1c-3%204%206%2019%2013%2021l4%204c2%203%206%205%208%204%201-1%201%200%201%201%200%203%2016%208%2026%207l16-5%205-3c5-2%2010-6%2010-8l1-1c2%202%208-6%2010-12l4-10c2-4%202-6%202-15%200-31-24-57-53-57l-6-1%2017%201h3c0-2-17-4-22-3m159%205l-16%208-6%203c-2-1-3%200-2%202v1l-2-2c-1-1-1-1-1%201%201%203-2%207-3%205-1-1-1-1-8%207-3%203-3%204%200%203l2-1%201-1-2%206c-3%207-5%2015-5%2023%200%207%201%208%201%200%202-12%204-18%206-15v3c-2%203-1%205%201%204v7c-1%207%200%2021%203%2028%202%205%204%206%204%203l-1-4c-3%200-2-3%200-3l2-2%201-3c3%200%202-9-1-10-2%200-3%204-2%206%202%202%201%206-1%206s-3-4-3-11l3-13%201-5c1-3%209-14%2013-17%2014-10%2032-16%2046-14h7l4%201%206%202%205%203c1%201%202%202%203%201l4%201%202%201c1-1-5-6-9-7l-8-3c-6-3-11-3-13-2h-2c-3-4-18-3-30%202l-5%202c-1-1%208-4%2019-8l3-2v-1c3-2%200-4-5-2l-9%202h-11l7-3%207-3-6%201m-146%2065l-6%206-7%206-3%202-4%203-2%202h3c5-2%2011-2%2011-1l-4%204-3%203c0%204%2012%207%2015%203v-2l-1-3-1-2-3-1c-2%201-3%201-2-1l6-2c3%202%205-2%205-7%200-6-2-12-2-8l-1-1-1-1m18%2054l-4%202c-2%200-4%202-4%205-1%202-1%203-2%202l-1%204v10c-1%206-1%207%201%209l2%204%201%201c2%201%203%204%203%2010%200%202%201%202%203%203%201%200%202%200%202%202%200%203%201%205%203%207%202%201%202%201%202-1%200-3%200-3%203-1%208%203%208%202%209-13%200-7%200-10-1-9h-2c-1-2-1-5%201-6v-5c-1-4-1-5%201-7%204-3%207-10%207-12l1-2%201-3c0-2%200-2-2%200-3%203-7%204-8%201h-3l-3-1c1-1%201-1-1-1l-1%203c0%201-1%202-3%202-3%200-4-2-2-3%202-3-1-3-3-1m-169%202c-5%202-6%2011-2%2015%202%203%206%201%209-3%205-7%201-15-7-12m120%204l-1%203c-1%201-1%201-1-1l1-3-2%202c-3%202-4%204-2%204l1%202c0%202%203%204%208%205%202%200%203%200%202%201v1l-1%201c-3%202%200%202%203%200l7-3c3-2%205-7%202-6h-3c-1-2-1-3%201-3%203%201%202-2-1-3-7-2-14-2-14%200m-140%2021c-6%206-6%2019%200%2024%207%206%2023-1%2026-11%201-3%201-4-1-5l-1-2c0-1-5-4-8-4l-3-2c-4-4-9-4-13%200m126%2026c-1%201%203%203%205%203%203-2%2011%202%2012%205%201%204%203%205%207%202l4-3%201-1-4-1-7-2c-4-3-17-5-18-3m117%2044c-3%203-5%2010-6%2016l-1%207c-3%200-5%2016-4%2030%200%202%200%202%202%201%201-1%202-12%200-15-1-2%200-3%202%200%203%203%204%2015%200%2015l-2%203c0%202-1%203-2%201-2-2-3-1-2%203l3%209%201-2%205-10%201%205c-2%2011-1%2013%203%2010%202-2%203-3%202-4l-1-5c0-3%200-5-2-6v-1c2-2%204%201%205%206%201%204%202%205%203%203%203-5%203-31%200-40l-3-15c-1-12-2-14-4-11m-236%2030c-5%202-8%209-7%2019l1%203h9c12-1%2013-1%2014-6%201-10-7-18-17-16m-70%2064c-3%202-3%203-3%207%200%207-2%2013-3%2013l-4%2010c-4%2019-4%2018-2%2024l1%206%203-2%202-4c0-2%206-5%209-5%202%200%205%205%205%209l1%205c1%201%204%200%204-2l1-4%205-11c4-11%203-12-3-13-5-1-11-5-11-8l-2-2-2-5c-1-4-1-4%203-4l5-1c1-1%202-10%200-10l-3-2c-3-4-3-4-6-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5957446808510638,"src":"/static/b26d5e2bbfd6271124b1b9303b3c6717/21095/banner.jpg","srcSet":"/static/b26d5e2bbfd6271124b1b9303b3c6717/36b10/banner.jpg 300w,\n/static/b26d5e2bbfd6271124b1b9303b3c6717/88367/banner.jpg 600w,\n/static/b26d5e2bbfd6271124b1b9303b3c6717/21095/banner.jpg 1200w,\n/static/b26d5e2bbfd6271124b1b9303b3c6717/97ce3/banner.jpg 1800w,\n/static/b26d5e2bbfd6271124b1b9303b3c6717/d23b7/banner.jpg 1920w","sizes":"(max-width: 1200px) 100vw, 1200px"},"fixed":{"src":"/static/b26d5e2bbfd6271124b1b9303b3c6717/58d74/banner.jpg"}}}}}}},"pageContext":{}}}