{"componentChunkName":"component---src-templates-post-article-index-js","path":"/o-que-e-e-como-funciona-um-proxy","result":{"data":{"markdownRemark":{"id":"17ff48f7-757c-5e93-ae2a-f02baf9e76db","html":"<h3 id=\"primeiro-a-traducao-do-termo\" style=\"position:relative;\"><a href=\"#primeiro-a-traducao-do-termo\" aria-label=\"primeiro a traducao do termo permalink\" class=\"anchor before\">#</a>Primeiro, a tradução do termo</h3>\n<p>Ao jogar o termo em ferramentas como o Google Tradutor você pode ver que Proxy vai ser traduzido pra algo como \"procurador\" ou \"representante\" e isso pode ser um bom começo de conversa.</p>\n<p>É comum vermos em cidades serviços de despachante, em contabilidades e até em assuntos relacionados a multas veiculares. Um despachante, caso você tenha usado um, nada mais é do que uma pessoa responsável por realizar uma série de envios e documentações burocráticas, por outra pessoa, atuando como um representante.</p>\n<p>O mesmo acontece quando você precisa fazer uma procuração, que é um documento onde você autoriza e \"concede permissões ou poderes\" a outra pessoa, de forma que ela possa tomar alguma decisão (ou assinar algum documento importante) como se fosse você.</p>\n<p>Em resumo, um proxy é uma camada que vai atuar entre um cliente e um servidor, sendo responsável por apenas repassar e intermediar alguma operação, como acesso a um site, por exemplo.</p>\n<h3 id=\"e-como-um-proxy-funciona\" style=\"position:relative;\"><a href=\"#e-como-um-proxy-funciona\" aria-label=\"e como um proxy funciona permalink\" class=\"anchor before\">#</a>E como um Proxy funciona?</h3>\n<p>Camadas de Proxy (também chamados de \"forward-proxy\" ou proxy de encaminhamento, diferente do \"reverse-proxy\", ou proxy reverso, que veremos adiante) servem para aplicar alguma lógica nos acessos em sua rede antes de encaminhar esse acesso ao destino.</p>\n<p>Você já deve ter ouvido que empresa X ou Y \"barra o acesso a algum site\", por exemplo. Isso é um ótimo exemplo de um Proxy sendo aplicado na prática.a</p>\n<p>Dentro de sua rede local, você pode configurar seu Proxy de maneira a proibir acesso a um ou vários domínios específicos, caso queira.</p>\n<p>Dessa maneira, esse Proxy foi configurado e mantido por você, dentro da sua rede, como cliente e não chega a enviar acessos aos servidores do site que você bloqueou.</p>\n<p>A sequência de acesso seria algo mais ou menos assim:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">clientes <span class=\"token operator\">-</span><span class=\"token operator\">></span> proxy <span class=\"token operator\">-</span><span class=\"token operator\">></span> internet <span class=\"token operator\">-</span><span class=\"token operator\">></span> servidores</code></pre></div>\n<p>E toda essa configuração viveria \"antes\" de atingir qualquer conexão externa com a internet e principalmente, antes de atingir os servidores do site que você está tentando acessar.</p>\n<h3 id=\"e-o-que-e-um-proxy-reverso\" style=\"position:relative;\"><a href=\"#e-o-que-e-um-proxy-reverso\" aria-label=\"e o que e um proxy reverso permalink\" class=\"anchor before\">#</a>E o que é um Proxy reverso?</h3>\n<p>Parecido com um Proxy comum, mas geralmente é transparente pra qualquer usuário em um sistema. Geralmente quem disponibiliza e cuida do Proxy reverso está do lado de quem cuida de um serviço ou website que você acessa.</p>\n<p>Geralmente Proxies reversos podem ter algumas utilidades como <a href=\"/balanceamento-de-carga\">balanceamento de carga</a>, atuar como uma cache e outras  coisas.</p>\n<p>Não é responsabilidade sua, como usuário, saber quantos servidores um website possui, você apenas quer acessar uma URL e pronto, consumir seu conteúdo, certo?</p>\n<p>No entanto, o time responsável por desenvolver o website que você está tentando acessar, pode estar usando um Proxy reverso pra otimizar a performance de entrega e aplicar alguma lógica interna aos servidores que fornecem conteúdo que você está tentando acessar.</p>\n<p>Como nesse caso, o Proxy foi disponibilizado pelo time que está desenvolvendo o serviço que você quer acessar, a sequência de acesso seria algo mais ou menos assim:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">clientes <span class=\"token operator\">-</span><span class=\"token operator\">></span> internet <span class=\"token operator\">-</span><span class=\"token operator\">></span> proxy <span class=\"token operator\">-</span><span class=\"token operator\">></span> servidores</code></pre></div>\n<h3 id=\"um-pequeno-exemplo\" style=\"position:relative;\"><a href=\"#um-pequeno-exemplo\" aria-label=\"um pequeno exemplo permalink\" class=\"anchor before\">#</a>Um pequeno exemplo</h3>\n<p>Para ficar um pouco mais claro, vamos realizar um pequeno exemplo prático.</p>\n<p>Em resumo, vimos até aqui que um Proxy nada mais é do que um personagem, em uma determinada estrutura de conexão, que faz um papel de representante, encaminhando e gerenciando algum acesso.</p>\n<p>Vamos usar o objeto Proxy do JavaScript pra entender um pouco como ele funciona e ver um exemplo de sua implementação. Claro que em nosso exemplo, esse Proxy é apenas um objeto da linguagem de programação, mas a funcionalidade de atuar como um \"representante\" é exatamente a mesma.</p>\n<p>No nosso cenário, teremos um pequeno objeto de <code class=\"language-text\">usuario</code> com dois tipos de permissões (<code class=\"language-text\">roles</code>) possíveis, sendo <code class=\"language-text\">escrita</code> e <code class=\"language-text\">leitura</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// nosso objeto de usuario</span>\n<span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Para começar a usar um Proxy em JavaScript é bem simples, basta executar sua função construtora <code class=\"language-text\">new Proxy()</code> que recebe 2 parâmetros: o objeto alvo inicial (nosso <code class=\"language-text\">usuario</code>) e um objeto com configurações (chamado também de \"handler\"). Por hora, esse nosso objeto será vazio:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// criamos objeto de configuracoes vazio</span>\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// criamos nosso usuarioComProxy</span>\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Já temos nosso <code class=\"language-text\">usuarioComProxy</code> que será a versão \"representante” do objeto <code class=\"language-text\">usuario</code> com as regras que ainda vamos definir.</p>\n<p>Agora nosso exemplo vai começar a ficar interessante. No objeto de configuração que criamos, podemos adicionar alguns utilitários (na documentação são chamados de \"traps\", como armadilhas) responsáveis por interceptar o acesso e a modificação do nosso objeto.</p>\n<p>Dessa forma, podemos criar uma lógica e definir alguns comportamentos a serem executados em momentos como ler e alterar propriedades de um objeto.</p>\n<p>Pode parecer confuso, mas vamos começar com um simples exemplo de log: a cada vez que qualquer propriedade de um objeto for acessada, vamos mostrar uma mensagem <code class=\"language-text\">Acessando propriedade ${propriedade}</code> no console.</p>\n<p>Para fazer isso, podemos definir uma função nas nossas configurações que atuará sempre que uma propriedade for acessada e isso é possível através do manipulador <code class=\"language-text\">get</code>. Esse manipulador recebe dois parâmetros por padrão, o objeto e a chave que estão sendo acessados no momento.</p>\n<p>Com isso, basta realizar nosso <code class=\"language-text\">console.log</code> normalmente:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// criamos nosso manipulador get</span>\n\t<span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// colocamos nosso console.log</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Acessando propriedade </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// tentamos acessar uma propriedade existente</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token comment\">// tentamos acessar uma propriedade inexistente</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>sobrenome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>Ao acessar as propriedades <code class=\"language-text\">nome</code> e <code class=\"language-text\">sobrenome</code>, você verá que no console as seguintes mensagens aparecerão:</p>\n<ul>\n<li><code class=\"language-text\">Acessando propriedade nome</code></li>\n<li><code class=\"language-text\">Acessando propriedade sobrenome</code></li>\n</ul>\n<p>No entanto, o valor dessas propriedades não apareceu como deveria: não foi impresso <code class=\"language-text\">Gabriel</code> no console. Isso acontece pelo fato de nosso manipulador <code class=\"language-text\">get</code> ter atuado como deveria. Em nossa lógica, não retornamos a propriedade esperada, apenas executamos um <code class=\"language-text\">console.log</code>. Por sua vez, a função <code class=\"language-text\">get</code> retorna <code class=\"language-text\">undefined</code> e é isso que aparece no final do processo.</p>\n<p>Vamos ajustar nossa função de forma que ela retorne o valor do objeto na chave escolhida:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Acessando propriedade </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// retornamos o valor de objeto/chave desejada</span>\n\t\t<span class=\"token keyword\">return</span> objeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Gabriel\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>sobrenome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>Maravilha, agora tudo funciona como deveria. Ao acessar a propriedade <code class=\"language-text\">nome</code> podemos receber seu valor e propriedades inexistentes, como <code class=\"language-text\">sobrenome</code> nos retornam <code class=\"language-text\">undefined</code>, como esperado.</p>\n<p>Agora vamos criar uma pequena lógica de validação: comentamos no início do exemplo que somente poderíamos ter 2 possíveis <code class=\"language-text\">roles</code> para um objeto de usuário, seja do tipo <code class=\"language-text\">escrita</code> ou <code class=\"language-text\">leitura</code>, certo?</p>\n<p>Vamos criar um array para guardar esses dois valores:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// criamos um array de roles</span>\n<span class=\"token keyword\">const</span> roles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'escrita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'leitura'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Acessando propriedade </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> objeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Agora, utilizando o modificador <code class=\"language-text\">set</code> podemos criar uma lógica que faça o que precisamos. Essa função, por sua vez, recebe não somente o objeto e a chave sendo modificada, mas também o valor que está sendo atribuído.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> roles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'escrita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'leitura'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Acessando propriedade </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> objeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">// criamos o modificador</span>\n\t<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">,</span> valor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Agora basta apenas desenvolver nossa lógica, de forma que, ao alterar a chave <code class=\"language-text\">role</code> verifiquemos se é uma das roles salvas no nosso array. Caso não seja, podemos disparar um erro, por exemplo. Caso contrário, podemos deixar a operação ocorrer normalmente.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> roles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'escrita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'leitura'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Acessando propriedade </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> objeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">,</span> valor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// mostramos uma mensagem qualquer</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Alterando </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> para </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>valor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// caso a chave sendo alterada seja \"role\"</span>\n\t\t<span class=\"token comment\">// e o valor não esteja incluso no array de \"roles\"</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chave <span class=\"token operator\">===</span> <span class=\"token string\">'role'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>roles<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>valor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// disparamos um erro</span>\n\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Role com valor </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>valor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> não é existente no sistema</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">// caso contrário, alteramos a role normalmente</span>\n\t\tobjeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> valor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Com isso podemos fazer dois pequenos testes e notar que nossa lógica funciona: vamos tentar alterar a role do <code class=\"language-text\">usuarioComProxy</code> para <code class=\"language-text\">admin</code> (um valor inválido) e depois para <code class=\"language-text\">leitura</code> (um valor válido):</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">usuarioComProxy<span class=\"token punctuation\">.</span>role <span class=\"token operator\">=</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// vai disparar um erro</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Você deve ter recebido um erro como <code class=\"language-text\">Uncaught Error: Role com valor admin não é existente no sistema</code>. Mas agora, ao tentar alterar para uma <code class=\"language-text\">role</code> válida, tudo deverá funcionar normalmente.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">usuarioComProxy<span class=\"token punctuation\">.</span>role <span class=\"token operator\">=</span> <span class=\"token string\">'leitura'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// leitura</span></code></pre></div>\n<h3 id=\"resumo-e-codigo-final\" style=\"position:relative;\"><a href=\"#resumo-e-codigo-final\" aria-label=\"resumo e codigo final permalink\" class=\"anchor before\">#</a>Resumo e código final</h3>\n<p>Nosso código, no final, é o seguinte:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> roles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'escrita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'leitura'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuario <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    nome<span class=\"token operator\">:</span> <span class=\"token string\">'Gabriel'</span><span class=\"token punctuation\">,</span>\n    role<span class=\"token operator\">:</span> <span class=\"token string\">'escrita'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> configuracoes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Acessando propriedade </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> objeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>objeto<span class=\"token punctuation\">,</span> chave<span class=\"token punctuation\">,</span> valor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Alterando </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chave<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> para </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>valor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chave <span class=\"token operator\">===</span> <span class=\"token string\">'role'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>roles<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>valor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Role com valor </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>valor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> não é existente no sistema</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tobjeto<span class=\"token punctuation\">[</span>chave<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> valor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> usuarioComProxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>usuario<span class=\"token punctuation\">,</span> configuracoes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Gabriel</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>sobrenome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\n<span class=\"token comment\">// dispararia um erro</span>\n<span class=\"token comment\">// usuarioComProxy.role = 'admin';</span>\n\nusuarioComProxy<span class=\"token punctuation\">.</span>role <span class=\"token operator\">=</span> <span class=\"token string\">'leitura'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usuarioComProxy<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// leitura</span></code></pre></div>\n<p>Implementamos um pequeno exemplo de Proxy, com um log toda vez que qualquer chave é acessada do nosso objeto e com uma lógica que proíbe a mudança da \"role\" que definimos, disparando um erro quando é de um tipo inválido.</p>\n<p>Espero que tenha gostado!</p>","timeToRead":7,"frontmatter":{"date":"13/06/2022","path":"/o-que-e-e-como-funciona-um-proxy","title":"O que é e como funciona um Proxy?","subtitle":"Conceitos e um pequeno exemplo prático desse personagem importante","banner":{"author":"Anatoly Ramonov","href":"https://unsplash.com/photos/OaSY9J2u-ns","image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='1200'%20height='750'%20viewBox='0%200%201200%20750'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20375v375h244l243-1-8-13a762%20762%200%2001-46-91l-7-7c-5-5-16-21-16-24l-2-3a280%20280%200%2001-21-35%20555%20555%200%2001-28-50%203894%203894%200%2000-47-81%201045%201045%200%2000-38-66l-6-13-4-5-2-4a332%20332%200%2000-16-28%20960%20960%200%2000-35-62A5581%205581%200%2001102%2071a119%20119%200%2001-12-23l-6-9a326%20326%200%2000-13-22l-4-8c-1%200-3-3-3-5l-2-4H0v375M75%201l22%2039a549%20549%200%200135%2063%20848%20848%200%200026%2046%201320%201320%200%200037%2066%202848%202848%200%200174%20128l2%204%201%203a388%20388%200%200133%2056%203729%203729%200%200149%2083%2012221%2012221%200%200067%20117l17%2029a1191%201191%200%200147%2082l15%2026%204%207h24l-8-15c-6-8-9-14-8-15l-1-2-8-10a1400%201400%200%2000-39-67%202453%202453%200%2001-45-78%203761%203761%200%2000-74-126%201177%201177%200%2000-19-34%20808%20808%200%2001-46-78l-5-9a351%20351%200%2001-28-45l-8-15a5903%205903%200%2000-73-128A4603%204603%200%200098%2010L92%200h-9l-8%201m30%203a551%20551%200%200119%2032%201828%201828%200%200160%20104l18%2031%2016%2027a6609%206609%200%200152%2088%201298%201298%200%200156%2095c3%203%205%208%206%2010a2659%202659%200%2000104%20175%202998%202998%200%200081%20139%202258%202258%200%200120%2032l8%2013h219l-2-3-3-6-8-12c-8-12-9-14-4-14l9-3%205-2%203%203a299%20299%200%200123%2035%205058%205058%200%2000272-1l-14-19a8728%208728%200%2000-85-109%203724%203724%200%2001-87-116%2010624%2010624%200%2001-160-210%202232%202232%200%2000-90-118%203711%203711%200%2001-61-77c-4-7-15-20-23-30a4320%204320%200%2001-43-58l-8-10H103l2%204m399-2l7%209a1098%201098%200%200162%2081%201778%201778%200%200081%20103%202609%202609%200%200196%20123%201011%201011%200%200150%2064%20913%20913%200%200136%2048%2026829%2026829%200%2001131%20173%206162%206162%200%2001110%20140l5%207h118V0H896a4481%204481%200%2000-307%204c-2%200-2%200-2%202l2%203c0%201-2%202-3%200V0h-41c-40%200-42%200-41%202m89%2012l-2%203c-2%201-2%202%200%203%201%202%201%202%201%200%201-1%201-1%202%201v5h1c1-1%202%200%203%201v3h1l2-1%202%201-1%201h-2c-2%201%201%202%203%201%202%200%203%201%201%203l2%204%203%205%201%201c1-1%202%200%202%201l2%201%201%201c-1%200%200%202%202%203l2%204%209%2010c2%200%206%205%205%206-2%200-1%202%201%202l3%201-1%201h-2c0%202%203%202%204%200h2c1%201%200%203-1%202-2-1-1%203%201%204%201%202%206%203%206%201l2-1c2%200%202%200%200-1h-4c-2%200-2%200%200-4%201-1%202-2%203-1%202%200%202%200%201-1l-1-2-1-1c-1-2-3-3-3-1l-1%201-2-1%202-1%201-1-1-1-1-1-1-3a406%20406%200%2001-18-21h-2c1%202%201%202-1%202-3-1-4-3-1-3%202-1%202-1-1-4l-3-4-1-2-4-5a243%20243%200%2000-8-10c-2-3-8-4-8-2M322%2056l-5%201c-6%200-6%200%2010%2023l10%2014%206%209c4%208%2013%2023%2016%2025%202%202%202%202%208%200%204%200%207-1%207-2l-6-11c-38-57-39-59-42-60l-4%201m164%2080a1018%201018%200%2000-31%2049l6-8a4354%204354%200%200128-39%201372%201372%200%200179%2017c27%206%2036%208%2033%205a445%20445%200%2000-57-13%204167%204167%200%2000-58-11m11%2012l-12%2018a415%20415%200%2001-29%2041c-3%203-5%207-4%207%202%202%204%200%2011-10a400%20400%200%200114-20l22-33c1-1%2026%204%2073%2015a603%20603%200%200039%207%201460%201460%200%2001-111-25h-3m3%2023a313%20313%200%2000-9%2014%20945%20945%200%2000-29%2045c2%201%203-1%2011-13a2441%202441%200%200137-53%20875%20875%200%200171%2016l33%207a7427%207427%200%2001-104-26c-2-1-3%200-10%2010m223%201l-5%201-3%202h2v1c-1%201-1%201%201%201l2%201h-3l-1%201%204%201c3%200%204%201%202%203v3c1%201%202%202%203%201l2%201%202%201%201%202v1l5%208c-1%201%203%208%205%208l1%201h2l1%201c-1%203%201%206%204%206l2%201c-1%201%202%207%203%207l9%2011%204%201%201%202c-1%202-1%202%201%201v1c-1%201-1%201%201%202%201%202%202%202%202%201%201-2%202%200%201%203%200%202%200%202%201%201%202-2%203-1%203%201%200%204%200%205%201%204s7%202%207%203h4l3%201v1l1-1h2v-1l-2-2c-1%201-2-1-1-2%203-1-2-4-7-4h-3c1-1%200-3-3-3-2%200-6-3-6-4s12%203%2013%205l2%201-1-2-1-2-1-1-2-1-1-3-2-2c-1-1-1-1-2%201l-1%202-1-2c-2-3-1-5%201-3h1l-1-3-3-2c-2-4-9-12-12-13-2-1-2-1-1-2s1-1-1-1h-2l-1%201-3%201c-1%202-2%202-4%201-3-2-1-2%204-3%203-1%204-1%203-3l-1-3-4-2-2-1c1-1%200-2-2-3-2%200-2%200-1-1v-2l-1-2h-2v-1l1-1c0-1-5-7-5-5%200%201-4%202-7%201l-2-1%202-1%202-2h-2l-1-1v-1c-2%201-5-1-4-3l-2-3c-3-2-3-3%201-3%202%200%202%201%202%203l1%201%201%201-1%201h-1c0%201%202%202%203%201%205-2-3-10-8-9m-343%2032c-8%201-19%206-23%2010s-6%209-4%2010l1%203c0%202%202%201%2014-2%2014-3%2016-3%2016-2l-12%203-12%204h-8l-3%209c-5%2017-5%2017%209%2013l20-6c0-2-4-2-14%201l-11%203%204-16%206%203c20%209%2052%201%2054-14v-6c-2-9-19-15-37-13m-87%2022c-11%203-18%2010-20%2016-3%2017%2030%2026%2051%2015l5-2-4-3-5-2-8-3c-5-3-6-3-4-4%203%200%2024%2010%2022%2011-1%201%200%202%208%205%209%204%2010%204%2016%203%208-1%2010-2%208-4h-7c-7%201-7%201-15-2l-8-3%203-4c6-8%202-17-9-22-8-3-25-4-33-1m276%205c-8%202-8%202-6%204h3c2-2%2013-2%2014%200l1%201%207%202%205%202-2%203c-10%2011%203%2025%2025%2027%2037%202%2052-28%2017-37-10-3-29-1-34%204-3%201-1%203%205%205%209%203%2016%207%2015%208s-7-1-10-4l-4-2c-4%200-12-4-11-5%202-1%201-2-8-6-10-4-10-4-17-2m-8%2011c-15%203-15%204-13%205%201%201%204%201%2013-2l12-2-2%208-2%207%203%203c2%204%202%204%205-7l2-11c2-6%200-6-18-1m-27%2010c-20%204-28%2012-25%2024%202%2011%2027%2017%2045%2012%2014-4%2022-13%2019-21-1-3-2-3-4-2-12%203-26%206-27%205l17-5c10-3%2011-3%209-6l-12-6-4-1h-18m264%209c2%202%202%202-2%203-4%202-6%204-4%205s5%204%204%205c0%202%200%202%201%201l2%201c0%202%202%203%203%201l2-3c2%200%203-2%201-2l-2-1c-1-1%200-2%201-2l1-2c-2-3-5-7-7-7v1m-337%207a405%20405%200%2000-20%2031l-13%2017-11%2015c-2-2-3-1-3%201s0%202%202%202v2h-6l-9-2a5905%205905%200%2000-102-23%20101178%20101178%200%2000109%2028c9%202%208%202%2013-5l4-6a356%20356%200%200022-33c2-1%2020-29%2020-30-2-2-3-1-6%203m346%206l-1%202-2%202-2%201%201%201%201%202c0%203%201%205%203%205l4%203c3%203%203%203%201%203-3-1-3-1%201%203%203%203%208%204%208%202l1-2v-2l-1-3-2-5-2-3-2-1-3%201%201%201c2%200%204%204%204%205l-2-1-3-2-1-3-2-4-1-2%201-2%201-1h-3m-357%2041a279%20279%200%2001-26%2037c2%202-3%201-89-21-28-6-29-7-29-5a6640%206640%200%2000121%2031%205497%205497%200%200048-70c3-4%202-7-1-7l-24%2035m28-11a1631%201631%200%2001-43%2061c1%203-1%203-22-2a6583%206583%200%2000-55-13c-47-11-43-10-43-9%200%202-1%202%2034%2010l57%2014c30%208%2034%208%2034%205%200-1%200-2%2015-25a2854%202854%200%200031-49c-2-2-3-1-8%208m348%203l7%2010%203%204c0%202%200%203%202%203h2l1-1v5l1%202c-2%202%206%208%208%207%202%200%202%200%202%202l3%207%202%201%202%201-2-2-1-4v-2l-1%201c0%204-2-1-2-5s-1-5-3-3c-1%202-2%202-3%201s-1-1%201-3l1-2c-2%200-2%200%200-1l2-2-2-1c-1%201-5-2-8-5l-2-1v-4h-2l-1%201c-1%200-1-3%201-4l-2-1c-2%200-2%200-2-2s-1-3-4-3l-3%201m-315%2033l-6%202-5%201%2016%2025%2040%2060c3%204%203%204%207%204%206%200%2012-2%2013-4l-13-20a817%20817%200%2001-29-44c-18-26-18-27-23-24m366%2021c-1%201-1%201%201%202%201%201%202%203%201%204l3%204%203%204c0%201%204%203%205%202l3-1h3l-3%202c-3%202-4%203-1%205v2l2%201%203%204%202%201%203-1c2%200%202%200%200%201l-2%201%202%202c2%201%202%202%201%202l-3-1h-1l3%203%205%204%2012%2012%201%202%202%202%202%203%203%202c2%200%202%200%201%201s-1%201%201%202c2%203%207%205%207%204%201%200%200-2-2-2-4-2-4-3-1-4l1-1c-2%200-2-3-1-5l-1-2-2-2h1c2%201%203%201%203-1l-2-2-3-2-2-3-3-4c-2-2-2-2-3-1h-1c1-2%200-2-1-2l-2-1-1-1v2l-1%204c-3%200-4-1-2-2v-4c2-2%202-4%200-4l-3-1%201-1c3%201%203%200%202-3s-4-4-4-2l-1%201c-2%200-3-4-2-5l1%201%202%201v-2l-3-2c-1%201-7-4-7-6h2c2%202%202%201%200-2-2-2-3-3-2%200l-2-1c-2-1-3-3-2-3l-1-2c0-2-1-2-1-1l-1%201-1-1c2-4-10-7-14-4m67%2077v1l-1%203c-2%201-2%201%200%202l1%203%203%204%203%204h1c1-1%202-1%202%201v2l-1%201c1%202%209%205%2010%205%202%200%203%203%201%203-1%201%203%207%205%207l1%201-1%201c-1%200-1%201%201%202l4%202c3%200%204%204%201%204v1l1%202h1c1-1%201-1%201%201l3%201c2%200%203%200%202%201h-2c-2%200-3%202-1%203l4%204%204%204%201%202c0%203%205%206%2010%205%202%200%203-1%203-2l1-2-1-1c-1-1-2-1-1-2l-2-3c-1-1-2-2-1-3l-1-2c-1%201-2%200-3-1l-3-1-2-1-3-1c-3%200-2-2%202-2%204-1%203-3-1-2-2%200-2%200-1-1l1-2-2-1%201-1-1-2c-2-2-2-2-4-1-1%202-2%202-3%201v-2l2-2-1-1h-2l-1-1c-2%200-2-1-1-2h2c2%202%203%201%202-1-1-1-3-2-4-1l-3-2c-2-1-2-2%200-2%202-1%201-3-1-3l-4-1c-2-1-2-1%200-2%201%200%202%200%201-1l-3-1h-3c-2-2-2-3%200-3s1-1-2-5l-4-3c0%202%200%202-3%201-3-2-2-3%200-2%203%200%203%200%202-2l-2-2-1-1c1-2-4-3-7-1m86%20105v3l-2-1h-2c-2%202-1%206%202%206%202%200%202%201%202%203l1%203%204%201h3v10l1-2%201-2v2c0%202%200%203%202%205%202%200%203%202%203%202l3%204%203%201%201-1v4l1%203c2%200%205%203%206%206%200%203%203%205%203%203h4c3%202%204%202%202-2-1-3-4-4-4-2h-1c-1-1-2-2-1-3l-3-2c-3-1-3-1-1-3v-1l-3-2-1-2-2-4c0-3-1-4-4-4l-1-1c2%200%203-2%201-2s-7-6-6-6l1-2-2%201h-1l-2-1c-2-1-3-5-1-7l-1-1h-4c-1%201-1%201-1-1s0-2%203-2l2%201-2-2c-2-3-2-3-4-2m37%2057v1c1-1%207%201%207%202l-1%201-4-1-2-1%202%202%202%203%201%201c0%202%207%209%208%208l1%202c-1%201%200%202%202%204%204%204%207%204%208%201l1-1v2h2c2-3-1-8-3-6h-2l2-2c1%200%201-1-1-1s-3-1-3-2l-4-2c-2%200-3-1-3-2l-1-2-1-2-2-4-1-2-4-1c-3%200-4%200-4%202'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5957446808510638,"src":"/static/9379b67ec4fb4eb63e95b2e1b609286e/21095/banner.jpg","srcSet":"/static/9379b67ec4fb4eb63e95b2e1b609286e/36b10/banner.jpg 300w,\n/static/9379b67ec4fb4eb63e95b2e1b609286e/88367/banner.jpg 600w,\n/static/9379b67ec4fb4eb63e95b2e1b609286e/21095/banner.jpg 1200w,\n/static/9379b67ec4fb4eb63e95b2e1b609286e/97ce3/banner.jpg 1800w,\n/static/9379b67ec4fb4eb63e95b2e1b609286e/d23b7/banner.jpg 1920w","sizes":"(max-width: 1200px) 100vw, 1200px"},"fixed":{"src":"/static/9379b67ec4fb4eb63e95b2e1b609286e/58d74/banner.jpg"}}}}}}},"pageContext":{}}}